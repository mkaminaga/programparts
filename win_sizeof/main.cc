//
// @file main.cc
// @brief Data type size check.
// @author Mamoru Kaminaga
// @date 2019-10-22 13:16:34
// Copyright 2019 Mamoru Kaminaga
// @sa Windows Data Types
// https://docs.microsoft.com/en-us/windows/win32/winprog/windows-data-types
//
#include <stdio.h>
#include <wchar.h>
#include <windows.h>

int main(int argc, char* argv[]) {
  (void)argc;
  (void)argv;
  wprintf(L"==== sizeof list ====\n");
  wprintf(L"ATOM : %d\n", sizeof(ATOM));
  wprintf(L"BOOL : %d\n", sizeof(BOOL));
  wprintf(L"BOOLEAN : %d\n", sizeof(BOOLEAN));
  wprintf(L"BYTE : %d\n", sizeof(BYTE));
  wprintf(L"CCHAR : %d\n", sizeof(CCHAR));
  wprintf(L"CHAR : %d\n", sizeof(CHAR));
  wprintf(L"COLORREF : %d\n", sizeof(COLORREF));
  wprintf(L"DWORD : %d\n", sizeof(DWORD));
  wprintf(L"DWORDLONG : %d\n", sizeof(DWORDLONG));
  wprintf(L"DWORD_PTR : %d\n", sizeof(DWORD_PTR));
  wprintf(L"DWORD32 : %d\n", sizeof(DWORD32));
  wprintf(L"DWORD64 : %d\n", sizeof(DWORD64));
  wprintf(L"FLOAT : %d\n", sizeof(FLOAT));
  wprintf(L"HACCEL : %d\n", sizeof(HACCEL));
  wprintf(L"HALF_PTR : %d\n", sizeof(HALF_PTR));
  wprintf(L"HANDLE : %d\n", sizeof(HANDLE));
  wprintf(L"HBITMAP : %d\n", sizeof(HBITMAP));
  wprintf(L"HBRUSH : %d\n", sizeof(HBRUSH));
  wprintf(L"HCOLORSPACE : %d\n", sizeof(HCOLORSPACE));
  wprintf(L"HCONV : %d\n", sizeof(HCONV));
  wprintf(L"HCONVLIST : %d\n", sizeof(HCONVLIST));
  wprintf(L"HCURSOR : %d\n", sizeof(HCURSOR));
  wprintf(L"HDC : %d\n", sizeof(HDC));
  wprintf(L"HDDEDATA : %d\n", sizeof(HDDEDATA));
  wprintf(L"HDESK : %d\n", sizeof(HDESK));
  wprintf(L"HDROP : %d\n", sizeof(HDROP));
  wprintf(L"HDWP : %d\n", sizeof(HDWP));
  wprintf(L"HENHMETAFILE : %d\n", sizeof(HENHMETAFILE));
  wprintf(L"HFILE : %d\n", sizeof(HFILE));
  wprintf(L"HFONT : %d\n", sizeof(HFONT));
  wprintf(L"HGDIOBJ : %d\n", sizeof(HGDIOBJ));
  wprintf(L"HGLOBAL : %d\n", sizeof(HGLOBAL));
  wprintf(L"HHOOK : %d\n", sizeof(HHOOK));
  wprintf(L"HICON : %d\n", sizeof(HICON));
  wprintf(L"HINSTANCE : %d\n", sizeof(HINSTANCE));
  wprintf(L"HKEY : %d\n", sizeof(HKEY));
  wprintf(L"HKL : %d\n", sizeof(HKL));
  wprintf(L"HLOCAL : %d\n", sizeof(HLOCAL));
  wprintf(L"HMENU : %d\n", sizeof(HMENU));
  wprintf(L"HMETAFILE : %d\n", sizeof(HMETAFILE));
  wprintf(L"HMODULE : %d\n", sizeof(HMODULE));
  wprintf(L"HMONITOR : %d\n", sizeof(HMONITOR));
  wprintf(L"HPALETTE : %d\n", sizeof(HPALETTE));
  wprintf(L"HPEN : %d\n", sizeof(HPEN));
  wprintf(L"HRESULT : %d\n", sizeof(HRESULT));
  wprintf(L"HRGN : %d\n", sizeof(HRGN));
  wprintf(L"HRSRC : %d\n", sizeof(HRSRC));
  wprintf(L"HSZ : %d\n", sizeof(HSZ));
  wprintf(L"HWINSTA : %d\n", sizeof(HWINSTA));
  wprintf(L"HWND : %d\n", sizeof(HWND));
  wprintf(L"INT : %d\n", sizeof(INT));
  wprintf(L"INT_PTR : %d\n", sizeof(INT_PTR));
  wprintf(L"INT16 : %d\n", sizeof(INT16));
  wprintf(L"INT32 : %d\n", sizeof(INT32));
  wprintf(L"INT64 : %d\n", sizeof(INT64));
  wprintf(L"LANGID : %d\n", sizeof(LANGID));
  wprintf(L"LCID : %d\n", sizeof(LCID));
  wprintf(L"LCTYPE : %d\n", sizeof(LCTYPE));
  wprintf(L"LGRPID : %d\n", sizeof(LGRPID));
  wprintf(L"LONG : %d\n", sizeof(LONG));
  wprintf(L"LONGLONG : %d\n", sizeof(LONGLONG));
  wprintf(L"LONG64 : %d\n", sizeof(LONG64));
  wprintf(L"LPARAM : %d\n", sizeof(LPARAM));
  wprintf(L"LPBOOL : %d\n", sizeof(LPBOOL));
  wprintf(L"LPBYTE : %d\n", sizeof(LPBYTE));
  wprintf(L"LPCOLORREF : %d\n", sizeof(LPCOLORREF));
  wprintf(L"LPCSTR : %d\n", sizeof(LPCSTR));
  wprintf(L"LPCTSTR : %d\n", sizeof(LPCTSTR));
  wprintf(L"LPCVOID : %d\n", sizeof(LPCVOID));
  wprintf(L"LPCWSTR : %d\n", sizeof(LPCWSTR));
  wprintf(L"LPDWORD : %d\n", sizeof(LPDWORD));
  wprintf(L"LPHANDLE : %d\n", sizeof(LPHANDLE));
  wprintf(L"LPINT : %d\n", sizeof(LPINT));
  wprintf(L"LPLONG : %d\n", sizeof(LPLONG));
  wprintf(L"LPSTR : %d\n", sizeof(LPSTR));
  wprintf(L"LPTSTR : %d\n", sizeof(LPTSTR));
  wprintf(L"LPVOID : %d\n", sizeof(LPVOID));
  wprintf(L"LPWORD : %d\n", sizeof(LPWORD));
  wprintf(L"LPWSTR : %d\n", sizeof(LPWSTR));
  wprintf(L"LRESULT : %d\n", sizeof(LRESULT));
  wprintf(L"PBOOL : %d\n", sizeof(PBOOL));
  wprintf(L"PBOOLEAN : %d\n", sizeof(PBOOLEAN));
  wprintf(L"PBYTE : %d\n", sizeof(PBYTE));
  wprintf(L"PCHAR : %d\n", sizeof(PCHAR));
  wprintf(L"PCSTR : %d\n", sizeof(PCSTR));
  wprintf(L"PCTSTR : %d\n", sizeof(PCTSTR));
  wprintf(L"PCWSTR : %d\n", sizeof(PCWSTR));
  wprintf(L"PDWORD : %d\n", sizeof(PDWORD));
  wprintf(L"PDWORDLONG : %d\n", sizeof(PDWORDLONG));
  wprintf(L"PDWORD_PTR : %d\n", sizeof(PDWORD_PTR));
  wprintf(L"PDWORD32 : %d\n", sizeof(PDWORD32));
  wprintf(L"PDWORD64 : %d\n", sizeof(PDWORD64));
  wprintf(L"PFLOAT : %d\n", sizeof(PFLOAT));
  wprintf(L"PHALF_PTR : %d\n", sizeof(PHALF_PTR));
  wprintf(L"PHANDLE : %d\n", sizeof(PHANDLE));
  wprintf(L"PHKEY : %d\n", sizeof(PHKEY));
  wprintf(L"PINT : %d\n", sizeof(PINT));
  wprintf(L"PINT_PTR : %d\n", sizeof(PINT_PTR));
  wprintf(L"PINT8 : %d\n", sizeof(PINT8));
  wprintf(L"PINT16 : %d\n", sizeof(PINT16));
  wprintf(L"PINT32 : %d\n", sizeof(PINT32));
  wprintf(L"PINT64 : %d\n", sizeof(PINT64));
  wprintf(L"PLCID : %d\n", sizeof(PLCID));
  wprintf(L"PLONG : %d\n", sizeof(PLONG));
  wprintf(L"PLONGLONG : %d\n", sizeof(PLONGLONG));
  wprintf(L"PLONG_PTR : %d\n", sizeof(PLONG_PTR));
  wprintf(L"PLONG32 : %d\n", sizeof(PLONG32));
  wprintf(L"PLONG64 : %d\n", sizeof(PLONG64));
  // wprintf(L"POINTER_32 : %d\n", sizeof(POINTER_32));
  // wprintf(L"POINTER_64 : %d\n", sizeof(POINTER_64));
  // wprintf(L"POINTER_SIGNED : %d\n", sizeof(POINTER_SIGNED));
  // wprintf(L"POINTER_UNSIGNED : %d\n", sizeof(POINTER_UNSIGNED));
  wprintf(L"PSHORT : %d\n", sizeof(PSHORT));
  wprintf(L"PSIZE_T : %d\n", sizeof(PSIZE_T));
  wprintf(L"PSSIZE_T : %d\n", sizeof(PSSIZE_T));
  wprintf(L"PSTR : %d\n", sizeof(PSTR));
  wprintf(L"PTBYTE : %d\n", sizeof(PTBYTE));
  wprintf(L"PTCHAR : %d\n", sizeof(PTCHAR));
  wprintf(L"PTSTR : %d\n", sizeof(PTSTR));
  wprintf(L"PUCHAR : %d\n", sizeof(PUCHAR));
  wprintf(L"PUHALF_PTR : %d\n", sizeof(PUHALF_PTR));
  wprintf(L"PUINT : %d\n", sizeof(PUINT));
  wprintf(L"PUINT_PTR : %d\n", sizeof(PUINT_PTR));
  wprintf(L"PUINT8 : %d\n", sizeof(PUINT8));
  wprintf(L"PUINT16 : %d\n", sizeof(PUINT16));
  wprintf(L"PUINT32 : %d\n", sizeof(PUINT32));
  wprintf(L"PUINT64 : %d\n", sizeof(PUINT64));
  wprintf(L"PULONG : %d\n", sizeof(PULONG));
  wprintf(L"PULONGLONG : %d\n", sizeof(PULONGLONG));
  wprintf(L"PULONG_PTR : %d\n", sizeof(PULONG_PTR));
  wprintf(L"PULONG32 : %d\n", sizeof(PULONG32));
  wprintf(L"PULONG64 : %d\n", sizeof(PULONG64));
  wprintf(L"PUSHORT : %d\n", sizeof(PUSHORT));
  wprintf(L"PVOID : %d\n", sizeof(PVOID));
  wprintf(L"PWCHAR : %d\n", sizeof(PWCHAR));
  wprintf(L"PWORD : %d\n", sizeof(PWORD));
  wprintf(L"PWSTR : %d\n", sizeof(PWSTR));
  // wprintf(L"QWORD : %d\n", sizeof(QWORD));
  wprintf(L"SC_HANDLE : %d\n", sizeof(SC_HANDLE));
  wprintf(L"SC_LOCK : %d\n", sizeof(SC_LOCK));
  // wprintf(L"SERVICE_STATUS_HANDLE : %d\n", SERVICE_STATUS_HANDLE);
  wprintf(L"SHORT : %d\n", sizeof(SHORT));
  wprintf(L"SIZE_T : %d\n", sizeof(SIZE_T));
  wprintf(L"SSIZE_T : %d\n", sizeof(SSIZE_T));
  wprintf(L"TBYTE : %d\n", sizeof(TBYTE));
  wprintf(L"TCHAR : %d\n", sizeof(TCHAR));
  wprintf(L"UCHAR : %d\n", sizeof(UCHAR));
  wprintf(L"UHALF_PTR : %d\n", sizeof(UHALF_PTR));
  wprintf(L"UINT : %d\n", sizeof(UINT));
  wprintf(L"UINT_PTR : %d\n", sizeof(UINT_PTR));
  wprintf(L"UINT8 : %d\n", sizeof(UINT8));
  wprintf(L"UINT16 : %d\n", sizeof(UINT16));
  wprintf(L"UINT32 : %d\n", sizeof(UINT32));
  wprintf(L"UINT64 : %d\n", sizeof(UINT64));
  wprintf(L"ULONG : %d\n", sizeof(ULONG));
  wprintf(L"ULONGLONG : %d\n", sizeof(ULONGLONG));
  wprintf(L"ULONG_PTR : %d\n", sizeof(ULONG_PTR));
  wprintf(L"ULONG32 : %d\n", sizeof(ULONG32));
  wprintf(L"ULONG64 : %d\n", sizeof(ULONG64));
  // wprintf(L"UNICODE_STRING : %d\n", sizeof(UNICODE_STRING));
  wprintf(L"USHORT : %d\n", sizeof(USHORT));
  wprintf(L"USN : %d\n", sizeof(USN));
  // wprintf(L"VOID : %d\n", sizeof(VOID));
  wprintf(L"WCHAR : %d\n", sizeof(WCHAR));
  wprintf(L"WORD : %d\n", sizeof(WORD));
  wprintf(L"WPARAM : %d\n", sizeof(WPARAM));
  return 0;
}
